'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
    function _class(apiKey, baseUrl) {
        _classCallCheck(this, _class);

        this.apiKey = apiKey;
        this.baseUrl = baseUrl;
    }

    _createClass(_class, [{
        key: 'sendRequest',
        value: function sendRequest(subUrl, verb, obj) {

            var options = {
                url: this.baseUrl + subUrl,
                method: verb,
                auth: {
                    user: this.apiKey
                },
                json: obj ? obj : {}
            };

            return (0, _requestPromise2.default)(options).catch(function (r) {
                if (r.statusCode >= 400 && r.statusCode < 500) {
                    var _console;

                    if (r.error.errors) (_console = console).error.apply(_console, _toConsumableArray(r.error.errors));
                    r.message = r.error.message;
                    throw r;
                } else if (r.statusCode >= 500 && r.statusCode < 600) {
                    var msg = '***** Please re-create the error and post it in issues page in SDK repository "https://github.com/moyasar/moyasar-node/issues  "';
                    r.message = 'Problem in the server';
                    console.error(msg);
                    throw r;
                } else {
                    throw r;
                }
            });
        }
    }]);

    return _class;
}();

exports.default = _class;
module.exports = exports.default;