'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _service = require('./service.js');

var _service2 = _interopRequireDefault(_service);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _class = function (_Service) {
    _inherits(_class, _Service);

    function _class() {
        _classCallCheck(this, _class);

        return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
    }

    _createClass(_class, [{
        key: 'list',
        value: function list() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { page: 1, per: 20 };

            if (options.per < 1 || options.per > 100) throw new Error('Per must be between 1 and 100');
            return this.sendRequest('invoices?page=' + options.page + '&per=' + options.per, 'GET').then(function (res) {
                return res.invoices;
            });
        }
    }, {
        key: 'fetch',
        value: function fetch(id) {
            return this.sendRequest('invoices/' + id);
        }
    }, {
        key: 'create',
        value: function create(receipt) {
            return this.sendRequest('invoices', 'POST', receipt).then(function (res) {
                return res;
            });
        }
    }, {
        key: 'update',
        value: function update(invoice) {
            if (typeof invoice.id != "string") {
                throw new Error('Invoice object does not have id');
            }
            return this.sendRequest('invoices/' + invoice.id, 'PUT', invoice).then(function (res) {
                return res;
            });
        }
    }, {
        key: 'cancel',
        value: function cancel(invoice) {
            if (typeof invoice.id != "string") {
                throw new Error('Invoice object does not have id');
            }
            return this.sendRequest('invoices/' + invoice.id + '/cancel', 'PUT', invoice).then(function (res) {
                return res;
            });
        }
    }]);

    return _class;
}(_service2.default);

exports.default = _class;
module.exports = exports.default;